on: workflow_dispatch
#on:
#  push:
#    branches:
#      - crawler
#      - har-file
#      - swagger
#      - brokencrystals
#      - codescan
#  pull_request:
#    branches: [codescan]
#  schedule:
#    - cron: "0 0 * * THU"

jobs:
  wait_for:
    name: Wait for any issues, gh-int + code_scanning_alerts on
    runs-on: ubuntu-latest
    container: node:16
    steps:
      - name: Scan Start
        id: start
        uses: NeuraLegion/run-scan@release
        with:
          api_token: ${{ secrets.BRIGHT_TOKEN1}}
          hostname: app.brightsec.com
          name: Bright Scan - ${{ github.sha }}
          restart_scan: ${{ secrets.BRIGHT_SCANID1}}
      - name: Wait for breakpoint
        id: wait
        uses: NeuraLegion/wait-for@release
        with:
          api_token:  ${{ secrets.BRIGHT_TOKEN1 }}
          hostname: app.brightsec.com
          scan: ${{ steps.start.outputs.id }}
          wait_for: high
          code_scanning_alerts: true
          github_token: ${{ secrets.KEY_GITHUB }}
          timeout: 600
      - name: ðŸ›‘ Stop the scan
        if: ${{ always() }}
        id: stop
        uses: NeuraLegion/stop-scan@release
        with:
          api_token: ${{ secrets.BRIGHT_TOKEN1 }}
          scan: ${{ steps.start.outputs.id }}
      - name: Download SARIF file
        id: sarif
        env:
          api_token: ${{ secrets.BRIGHT_TOKEN1 }}
          scan: ${{ steps.start.outputs.id }}
          scanId: ${{ secrets.BRIGHT_SCANID1}}
          hostname: app.brightsec.com
      run: |
        echo Downloading sarif report
        curl -X GET "$(hostname)/api/v1/scans/$(scanId)/reports/sarif" -H "Authorization: Api-Key ${{ parameters.apiToken }}" -o $(sarifFilePath).gz
        gzip -d $(sarifFilePath).gz
        sarifFileText=$(cat NeuraLegion_ScanReport.sarif)
        echo "sarif file text: $sarifFileText"        
